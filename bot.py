
import os
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters

# –í–æ–ø—Ä–æ—Å—ã –±–æ—Ç–∞ (–ø—Ä–∏–º–µ—Ä)
questions = [
    {"text": "–ö–æ–≥–¥–∞ –≤–∞—à —Å—Ç–∞—Ä—Ç? (–ù–∞–ø—Ä–∏–º–µ—Ä: 20.09.2025)", "type": "input"},
    {"text": "–ö–∞–∫–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è?", "options": ["5 –∫–º", "10 –∫–º", "21 –∫–º", "42 –∫–º"]},
    {"text": "–£—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏?", "options": ["–ù–æ–≤–∏—á–æ–∫", "–û–ø—ã—Ç–Ω—ã–π", "–ü—Ä–æ—Ñ–∏"]},
    {"text": "–î–Ω–µ–π –≤ –Ω–µ–¥–µ–ª—é?", "options": ["2", "3", "5", "7"]}
]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['answers'] = {}
    context.user_data['current_question'] = 0
    await ask_question(update, context)

async def ask_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    index = context.user_data['current_question']
    if index >= len(questions):
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ü—Ä–æ–≥—Ä–∞–º–º–∞ –±—É–¥–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ ‚úÖ", reply_markup=ReplyKeyboardRemove())
        return

    q = questions[index]
    if 'options' in q:
        buttons = [[option] for option in q['options']]
        markup = ReplyKeyboardMarkup(buttons, one_time_keyboard=True, resize_keyboard=True)
        await update.message.reply_text(q['text'], reply_markup=markup)
    else:
        await update.message.reply_text(q['text'], reply_markup=ReplyKeyboardRemove())

async def handle_response(update: Update, context: ContextTypes.DEFAULT_TYPE):
    answer = update.message.text
    index = context.user_data['current_question']
    question_text = questions[index]['text']
    context.user_data['answers'][question_text] = answer

    context.user_data['current_question'] += 1
    await ask_question(update, context)

if __name__ == '__main__':
    TOKEN = os.getenv("TELEGRAM_TOKEN")
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_response))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω üöÄ")
    app.run_polling()
